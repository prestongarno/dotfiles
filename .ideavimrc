
let mapleader=","

set surround

"timeouts for the noremappings
set notimeout
set ttimeout

" Add semi and esc
noremap <leader>; <Esc>$r;
" Refresh .ideavimrc
noremap <leader>! :source ~/.ideavimrc<CR>

" Single keymap for recent files because it's used so much
map <leader><Tab> :action RecentFiles<CR>
nnoremap <S-A-j> :action VimMotionPreviousTab<CR>
nnoremap <S-A-k> :action VimMotionNextTab<CR>

" :x close
nnoremap <leader>x :x<CR>

" Using f for Method navigation
map <C-S-m> :action MethodUp<CR>
map <C-m> :action MethodDown<CR>

" Using <> for walking through code changes
nnoremap < :action JumpToLastChange<CR>
nnoremap > :action JumpToNextChange<CR>

" break line                                         
nnoremap <leader>b i<CR><Esc>k$

" better comment func
map <C-/> mr0wi//<Esc>`rj
" make e put into dev/null
vmap e "_dd<Esc>
" next word occurence under cursor
nnoremap <leader>n evb"nyw/<C-r>n<CR>
" break from expression with parens
imap <leader>j <Esc>f)a

" Popup Error message
nnoremap <leader><Esc> :action ShowErrorDescription<CR>

" Move (refactor)
noremap <leader>mm :action Move<CR>
" Quick JavaDoc
map q :action QuickJavaDoc<CR>

" Error navigation
noremap <leader>z :action GotoNextError<CR>
noremap <leader>Z :action GotoPreviousError<CR>

"helpful java navigation
"jump to block paramaters above 
noremap <C-p> ?)\s\{-}\n\{-}{<CR>0f(
noremap <C-S-p> /)\s\{-}\n\{-}{<CR>0f(

" Misc editor Tab actions
map <C-S-q> :action ReopenClosedTab<CR>
map <C-q> :action CloseContent<CR>
map <C-A-q> :action CloseAllEditorsButActive<CR>

" Code folding
" f = folding
noremap <leader>fa :action CollapseAllRegions<CR>
noremap <leader>fd :action CollapseDocComments<CR>
noremap <leader>fF :action CollapseRegionRecursively<CR>
noremap <leader>fA :action ExpandAllRegions<CR>
noremap <leader>fD :action ExpandDocComments<CR>
noremap <leader>fF :action ExpandRegionRecursively<CR>

" Code generation
" g = generate
noremap <leader>gg :action Generate<CR>
noremap <leader>gc :action GenerateConstructor<CR>
noremap <leader>ga :action GenerateGetterAndSetter<CR>
noremap <leader>gt :action GenerateGetter<CR>
noremap <leader>gs :action GenerateSetter<CR>
noremap <leader>ge :action GenerateEquals<CR>
noremap <leader>gt :action GenerateTestMethod<CR>
noremap <leader>gi :action ImplementMethods<CR>
noremap <leader>go :action OverrideMethods<CR>

"Javadoc stuff
noremap <leader>jj :action FixDocComment<CR>
noremap <leader>ju :action GenerateJavadoc<CR>
noremap <leader>jf :%s#\(\n\s\+\\\|\t\+\)\(/\)\(\*\+\)\n#\r\t\2\*****************************************\r#g<CR>:%s#\n\(\t\+\\\|\s\+\)\(\*\+\/\)#\r\1\****************************************/#g<CR>
noremap <leader>rs :action ConvertIndentsToSpaces<CR>
" Source Navigation and Source-specific shortcuts
" s = source
noremap <leader>ss :action FileStructurePopup<CR>
noremap <leader>su :action FindUsagesInFile<CR>
noremap <leader>sa :action FindUsages<CR>
noremap <leader>so :action SelectAllOccurrences<CR>
noremap <leader>sr :action RenameElement<CR>i

" Code Extraction
" e = extract
noremap <leader>ec :action ExtractClass<CR>
noremap <leader>ef :action ExtractFunction<CR>
noremap <leader>ei :action ExtractInterface<CR>
noremap <leader>em :action ExtractMethod<CR>
noremap <leader>eM :action ExtractModule<CR>
noremap <leader>es :action ExtractSuperclass<CR>

" Introduce variables
" i = introduce
noremap <leader>ic :action IntroduceConstant<CR>
noremap <leader>if :action IntroduceField<CR>
noremap <leader>iF :action IntroduceFunctionalParameter<CR>
noremap <leader>ip :action IntroduceParameter<CR>
noremap <leader>iP :action IntroduceParameterObject<CR>
noremap <leader>it :action IntroduceProperty<CR>
noremap <leader>ii :action IntroduceVariable<CR>
noremap <leader>II :action Inline<CR>

"Formatting shortcut
noremap <leader>rf :action ReformatCode<CR>
noremap <leader>rr :%s#\(case\s\+\\\|\S\+:\)\n\s\+\(return\s\\\|\S\\\|\n\{-};\)#\1 \2#g<CR>
noremap <leader>rt :action ConvertIndentsToTabs<CR>

" Code hierarchy navigation 
" h = hierarchy
noremap <leader>hi :action GotoImplementation<CR>
noremap <leader>hd :action GotoDeclaration<CR>
noremap <leader>ht :action GotoTypeDeclaration<CR>
noremap <leader>hs :action GotoSuperMethod<CR>

" Create commands
" c = create
noremap <leader>cc :action NewClass<CR>
noremap <leader>ce :action NewElement<CR>
noremap <leader>cf :action NewFile<CR>
noremap <leader>cm :action NewModule<CR>
noremap <leader>cs :action NewScratchFile<CR>

" Debug commands
" d = debug
noremap <leader>dd :action ToggleLineBreakpoint<CR>
noremap <leader>de :action EditBreakpoint<CR>
noremap <leader>df :action ToggleFieldBreakpoint<CR>
noremap <leader>dm :action ToggleMethodBreakpoint<CR>
